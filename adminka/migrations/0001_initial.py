# Generated by Django 4.0.3 on 2022-11-11 05:07

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('status', models.SmallIntegerField(choices=[(1, 'admin'), (2, 'user')], default=2)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('photo', models.ImageField(upload_to='About/')),
                ('bio', models.TextField()),
                ('status', models.SmallIntegerField(choices=[(1, 'in work'), (2, 'deleted')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=2323232)),
                ('photo', models.ImageField(upload_to='Club/')),
                ('scored', models.IntegerField(default=0)),
                ('missed', models.IntegerField(default=0)),
                ('game', models.IntegerField(default=0)),
                ('scores', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=23232)),
                ('date_birth', models.DateField()),
                ('description', models.CharField(max_length=10000)),
                ('last_name', models.CharField(max_length=23232)),
                ('played_minutes', models.IntegerField(default=0)),
                ('sub_off', models.IntegerField(default=0)),
                ('games', models.IntegerField(default=0)),
                ('number', models.IntegerField()),
                ('status', models.SmallIntegerField(choices=[(1, 'attacker'), (2, 'midfielder'), (3, 'defender'), (4, 'goalkeeper'), (6, 'substitute')], default=6)),
                ('captain', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=23232)),
                ('photo', models.ImageField(upload_to='Product/')),
                ('price', models.IntegerField()),
                ('description', models.CharField(max_length=23232)),
                ('status', models.SmallIntegerField(choices=[(1, 'in work'), (2, 'deleted')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inst', models.URLField()),
                ('yt', models.URLField()),
                ('tt', models.URLField()),
                ('tw', models.URLField()),
                ('fb', models.URLField()),
                ('status', models.SmallIntegerField(choices=[(1, 'in work'), (2, 'deleted')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='Sponsor/')),
                ('name', models.CharField(max_length=344343)),
            ],
        ),
        migrations.CreateModel(
            name='Trending',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('video', models.FileField(blank=True, null=True, upload_to='')),
                ('name', models.CharField(max_length=2323)),
                ('photo', models.ImageField(upload_to='Trending/')),
                ('description', models.CharField(max_length=65676876)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Turnir',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('name', models.CharField(max_length=23232)),
                ('club', models.ManyToManyField(to='adminka.club')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('club_1_result', models.IntegerField()),
                ('club_2_result', models.IntegerField()),
                ('club1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ffffff', to='adminka.club')),
                ('club2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sdsdsds', to='adminka.club')),
                ('turnir', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.turnir')),
            ],
        ),
        migrations.AddField(
            model_name='club',
            name='players',
            field=models.ManyToManyField(to='adminka.player'),
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminka.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
